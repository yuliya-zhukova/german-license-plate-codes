{"version":3,"sources":["AreaListItem.tsx","AreaList.tsx","SearchField.tsx","App.tsx","index.tsx"],"names":["AreaListItem","props","areaItem","className","code","name","AreaList","list","Table","striped","bordered","map","item","SearchField","newValue","maxLength","placeholder","aria-label","onChange","event","value","target","handleInput","App","useState","newInput","setNewInput","obj","areaSortList","germanLicensePlatePrefixes","Object","keys","key","sort","a","b","newCode","RegExp","areaFilterableList","filter","test","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAMe,SAASA,EAAaC,GAA2B,IACtDC,EAAaD,EAAbC,SAER,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAU,aAAd,SACGD,EAASE,OAEZ,oBAAID,UAAU,aAAd,SACGD,EAASG,U,YCFH,SAASC,EAASL,GAAuB,IAC9CM,EAASN,EAATM,KAER,OACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAAvB,UACE,gCACE,qBAAIP,UAAU,aAAd,UACE,oBAAIA,UAAU,aAAd,kBAGA,oBAAIA,UAAU,aAAd,uBAKJ,gCAEII,EAAKI,KAAI,SAACC,GAAD,OACP,cAACZ,EAAD,CAA8BE,SAAUU,GAArBA,EAAKR,c,MC7BrB,SAASS,EAAYZ,GAAa,IACvCa,EAAab,EAAba,SAQR,OACE,qBAAKX,UAAU,QAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAf,eACA,uBACEA,UAAU,eACVE,KAAK,OACLU,UAAW,EACXC,YAAY,MACZC,aAAW,YACXC,SAhBR,SAAkBC,GAAmB,IAC3BC,EAAUD,EAAME,OAAhBD,MAERnB,EAAMqB,YAAYF,IAcZA,MAAON,S,MCbF,SAASS,IAAO,IAAD,EACIC,mBAAS,IADb,mBACrBC,EADqB,KACXC,EADW,KAc5B,IAPuBC,EASjBC,GATiBD,EAOQE,EANtBC,OAAOC,KAAKJ,GAAKhB,KAAI,SAACqB,GAAD,MAAU,CACpC5B,KAAM4B,EACN3B,KAAMsB,EAAIK,QAMgBC,MAAK,SAACC,EAAaC,GAAd,OAA+BD,EAAE9B,KAAO+B,EAAE/B,KAAO,GAAK,KAEnFgC,EAAU,IAAIC,OAAJ,WAAeZ,GAAY,KAErCa,EAAqBV,EAAaW,QAAO,SAAC3B,GAAD,OAAoBwB,EAAQI,KAAK5B,EAAKR,SAErF,OACE,sBAAKD,UAAU,OAAf,UACE,4DACA,cAAC,EAAD,CACEmB,YAvBN,SAAoBF,GAClBM,EAAYN,IAuBRA,MAAOK,IAET,cAAC,EAAD,CACElB,KAAM+B,OCnCdG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cdd5171d.chunk.js","sourcesContent":["import { AreaItem } from './types';\n\ninterface AreaListItemProps {\n  areaItem: AreaItem;\n}\n\nexport default function AreaListItem(props: AreaListItemProps) {\n  const { areaItem } = props;\n\n  return (\n    <tr className=\"area__item\">\n      <td className=\"area__code\">\n        {areaItem.code}\n      </td>\n      <td className=\"area__name\">\n        {areaItem.name}\n      </td>\n    </tr>\n  );\n}\n","import { Table } from 'react-bootstrap';\n\nimport AreaListItem from './AreaListItem';\n\nimport { AreaItem } from './types';\n\nimport './AreaList.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface AreaListProps {\n  list: AreaItem[];\n}\n\nexport default function AreaList(props: AreaListProps) {\n  const { list } = props;\n\n  return (\n    <Table striped bordered>\n      <thead>\n        <tr className=\"area__item\">\n          <th className=\"area__code\">\n            Code\n          </th>\n          <th className=\"area__name\">\n            Name\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          list.map((item: AreaItem) => (\n            <AreaListItem key={item.code} areaItem={item} />\n          ))\n        }\n      </tbody>\n    </Table>\n  );\n}\n","import './SearchField.scss';\n\nexport default function SearchField(props: any) {\n  const { newValue } = props;\n\n  function getInput(event: any): void {\n    const { value } = event.target;\n\n    props.handleInput(value);\n  }\n\n  return (\n    <div className=\"plate\">\n      <div className=\"plate__top\">\n        <div className=\"plate__eu\">D</div>\n        <input\n          className=\"plate__input\"\n          name=\"code\"\n          maxLength={3}\n          placeholder=\"XXX\"\n          aria-label=\"Area code\"\n          onChange={getInput}\n          value={newValue}\n        />\n      </div>\n    </div>\n  );\n}\n","import germanLicensePlatePrefixes from 'german-license-plate-prefixes';\nimport { useState } from 'react';\n\nimport AreaList from './AreaList';\nimport SearchField from './SearchField';\nimport { AreaItem } from './types';\n\nimport './App.scss';\n\nexport default function App() {\n  const [newInput, setNewInput] = useState('');\n\n  function searchArea(value: string) {\n    setNewInput(value);\n  }\n\n  function objectToArray(obj: any): AreaItem[] {\n    return Object.keys(obj).map((key) => ({\n      code: key,\n      name: obj[key]\n    }));\n  }\n\n  const areaList = objectToArray(germanLicensePlatePrefixes);\n\n  const areaSortList = areaList.sort((a: AreaItem, b: AreaItem) => (a.code > b.code ? 1 : -1));\n\n  const newCode = new RegExp(`^${newInput}`, 'i');\n\n  const areaFilterableList = areaSortList.filter((item: AreaItem) => newCode.test(item.code));\n\n  return (\n    <div className=\"area\">\n      <h1>German license plate codes</h1>\n      <SearchField\n        handleInput={searchArea}\n        value={newInput}\n      />\n      <AreaList\n        list={areaFilterableList}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}