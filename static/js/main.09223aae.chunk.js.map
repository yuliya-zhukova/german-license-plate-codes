{"version":3,"sources":["AreaListItem.tsx","AreaList.tsx","SearchField.tsx","App.tsx","index.tsx"],"names":["AreaListItem","props","areaItem","match","num","split","length","className","code","substr","href","name","target","rel","AreaList","list","map","item","SearchField","newValue","maxLength","placeholder","aria-label","onChange","event","value","handleInput","App","useState","newInput","setNewInput","obj","areaSortList","germanLicensePlatePrefixes","Object","keys","key","sort","a","b","newCode","RegExp","areaFilterableList","filter","test","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAOe,SAASA,EAAaC,GAA2B,IACtDC,EAAoBD,EAApBC,SAAUC,EAAUF,EAAVE,MAEZC,EAAMD,EAAME,MAAM,IAAIC,OAE5B,OACE,qBAAIC,UAAU,aAAd,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAMA,UAAU,mBAAhB,SACGJ,IAEFD,EAASM,KAAKC,OAAOL,MAExB,qBAAKG,UAAU,aAAf,SACE,mBACEG,KAAI,wCAAmCR,EAASS,MAChDC,OAAO,SACPC,IAAI,aACJN,UAAU,aAJZ,SAMGL,EAASS,Y,YCfL,SAASG,EAASb,GAAuB,IAC9Cc,EAAgBd,EAAhBc,KAAMZ,EAAUF,EAAVE,MAEd,OACE,oBAAII,UAAU,aAAd,SAEIQ,EAAKC,KAAI,SAACC,GAAD,OACP,cAACjB,EAAD,CAA8BE,SAAUe,EAAMd,MAAOA,GAAlCc,EAAKT,W,MCjBnB,SAASU,EAAYjB,GAAa,IACvCkB,EAAalB,EAAbkB,SAQR,OACE,qBAAKZ,UAAU,QAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAf,eACA,uBACEA,UAAU,eACVI,KAAK,OACLS,UAAW,EACXC,YAAY,MACZC,aAAW,YACXC,SAhBR,SAAkBC,GAAmB,IAC3BC,EAAUD,EAAMZ,OAAhBa,MAERxB,EAAMyB,YAAYD,IAcZA,MAAON,S,MCbF,SAASQ,IAAO,IAAD,EACIC,mBAAS,IADb,mBACrBC,EADqB,KACXC,EADW,KAc5B,IAPuBC,EASjBC,GATiBD,EAOQE,EANtBC,OAAOC,KAAKJ,GAAKf,KAAI,SAACoB,GAAD,MAAU,CACpC5B,KAAM4B,EACNzB,KAAMoB,EAAIK,QAMgBC,MAAK,SAACC,EAAaC,GAAd,OAA+BD,EAAE9B,KAAO+B,EAAE/B,KAAO,GAAK,KAEnFgC,EAAU,IAAIC,OAAJ,WAAeZ,GAAY,KAErCa,EAAqBV,EAAaW,QAAO,SAAC1B,GAAD,OAAoBuB,EAAQI,KAAK3B,EAAKT,SAErF,OACE,sBAAKD,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,wCACA,cAAC,EAAD,CACEmB,YAvBN,SAAoBD,GAClBK,EAAYL,IAuBRA,MAAOI,IAGPA,GAAY,cAAC,EAAD,CAAUd,KAAM2B,EAAoBvC,MAAO0B,OCnC/DgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.09223aae.chunk.js","sourcesContent":["import { AreaItem } from './types';\n\ninterface AreaListItemProps {\n  areaItem: AreaItem;\n  match: string;\n}\n\nexport default function AreaListItem(props: AreaListItemProps) {\n  const { areaItem, match } = props;\n\n  const num = match.split('').length;\n\n  return (\n    <li className=\"area__item\">\n      <div className=\"area__code\">\n        <span className=\"area__code_match\">\n          {match}\n        </span>\n        {areaItem.code.substr(num)}\n      </div>\n      <div className=\"area__name\">\n        <a\n          href={`https://en.wikipedia.org/wiki/${areaItem.name}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"area__link\"\n        >\n          {areaItem.name}\n        </a>\n      </div>\n    </li>\n  );\n}\n","import AreaListItem from './AreaListItem';\n\nimport { AreaItem } from './types';\n\nimport './AreaList.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface AreaListProps {\n  list: AreaItem[];\n  match: string;\n}\n\nexport default function AreaList(props: AreaListProps) {\n  const { list, match } = props;\n\n  return (\n    <ul className=\"area__list\">\n      {\n        list.map((item: AreaItem) => (\n          <AreaListItem key={item.code} areaItem={item} match={match} />\n        ))\n      }\n    </ul>\n  );\n}\n","import './SearchField.scss';\n\nexport default function SearchField(props: any) {\n  const { newValue } = props;\n\n  function getInput(event: any): void {\n    const { value } = event.target;\n\n    props.handleInput(value);\n  }\n\n  return (\n    <div className=\"plate\">\n      <div className=\"plate__top\">\n        <div className=\"plate__eu\">D</div>\n        <input\n          className=\"plate__input\"\n          name=\"code\"\n          maxLength={3}\n          placeholder=\"XXX\"\n          aria-label=\"Area code\"\n          onChange={getInput}\n          value={newValue}\n        />\n      </div>\n    </div>\n  );\n}\n","import germanLicensePlatePrefixes from 'german-license-plate-prefixes';\nimport { useState } from 'react';\n\nimport AreaList from './AreaList';\nimport SearchField from './SearchField';\nimport { AreaItem } from './types';\n\nimport './App.scss';\n\nexport default function App() {\n  const [newInput, setNewInput] = useState('');\n\n  function searchArea(value: string) {\n    setNewInput(value);\n  }\n\n  function objectToArray(obj: any): AreaItem[] {\n    return Object.keys(obj).map((key) => ({\n      code: key,\n      name: obj[key]\n    }));\n  }\n\n  const areaList = objectToArray(germanLicensePlatePrefixes);\n\n  const areaSortList = areaList.sort((a: AreaItem, b: AreaItem) => (a.code > b.code ? 1 : -1));\n\n  const newCode = new RegExp(`^${newInput}`, 'i');\n\n  const areaFilterableList = areaSortList.filter((item: AreaItem) => newCode.test(item.code));\n\n  return (\n    <div className=\"area\">\n      <h1 className=\"area__title\">German license plate codes</h1>\n      <SearchField\n        handleInput={searchArea}\n        value={newInput}\n      />\n      {\n        newInput && <AreaList list={areaFilterableList} match={newInput} />\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}